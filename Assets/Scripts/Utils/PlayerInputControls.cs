//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/InputControls/PlayerInputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Project.Utils.Input
{
    public partial class @PlayerInputControls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInputControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputControls"",
    ""maps"": [
        {
            ""name"": ""Touch"",
            ""id"": ""0d461fb8-1a03-48c4-8cbc-959f5a061933"",
            ""actions"": [
                {
                    ""name"": ""PrimaryTouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""72e7e984-fcff-43f9-82a6-8f4b1c4dafbf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimaryTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""04f33315-48b4-4450-821a-237e51d98dae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimarySwipeDelta"",
                    ""type"": ""Value"",
                    ""id"": ""7193389a-3605-4a8d-be8f-ecfe3a89c857"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryTouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""791457f4-3e48-426b-95fb-8123b820221c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryTouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""b43835f8-e61d-4497-ae63-2b48860aadce"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PrimarySwipeDeltaPointer"",
                    ""type"": ""Value"",
                    ""id"": ""528f211a-994c-4936-9df1-a70f9cb6b24b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""690727dc-c4f7-4a9c-80cd-63bddeaf15e9"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b000cb44-9474-4424-a3aa-dc8c8c394b85"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65951e91-fde8-42f2-8066-bddef2e0237f"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimarySwipeDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a4788ca-0a14-4c0e-9dde-fff649a7eb0f"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64bb9ea5-f3f6-4e24-bd55-e9463a832df5"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f6aad87-6959-48ee-8a84-6b7bfefe0903"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimarySwipeDeltaPointer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MouseKeyboard"",
            ""id"": ""7780af90-471c-4cb1-83e1-0c615ff481db"",
            ""actions"": [
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""8be0e123-b42c-4a02-b08c-6245aa404acb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""9f9b9906-645b-4cf5-a9fe-17280df555b7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""f2c8ca2d-35a9-48d5-a5f9-0cff51716149"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwipeDelta"",
                    ""type"": ""Value"",
                    ""id"": ""35155ceb-e3a5-4030-9032-cd1c044eea7d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ClickContact"",
                    ""type"": ""Button"",
                    ""id"": ""41ede386-f314-46bc-bd48-a93fea33b812"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""0cffec7d-8919-4cbf-b331-b512bd03c6ed"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""8e0c47d8-c7a7-417a-a8a9-b50b6fb3b253"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d19a0f48-828f-4e55-9e3c-b55fdd5cdd79"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""cdd69d27-e7e4-4a45-a45e-127a716de129"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ece3e4d5-226e-4b12-8f81-49e903d4e9ec"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""933ff8d6-d7ed-448f-9d50-044fd9ccf99b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""19f6fea6-2b51-414d-a783-5dcceb51e5da"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5b4ec864-e88f-4034-9e29-286a404f535c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8f5794be-6e81-4ef5-8cb3-021dcd692155"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e35cdb84-a11a-43e6-8ca7-3a50dd477e03"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwipeDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ee27640-3c79-4534-9009-8502aa4f83f9"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ClickContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""73b2b3ad-660d-4b14-94ed-24ebee600855"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4e6716cb-4156-47e4-ae57-584cdf48ff06"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cc5b61e1-056a-457f-bb3b-9d3d97a10a78"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""099070e5-7a7a-46ff-97cd-66d2ea37bc10"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Touch
            m_Touch = asset.FindActionMap("Touch", throwIfNotFound: true);
            m_Touch_PrimaryTouchPosition = m_Touch.FindAction("PrimaryTouchPosition", throwIfNotFound: true);
            m_Touch_PrimaryTouchContact = m_Touch.FindAction("PrimaryTouchContact", throwIfNotFound: true);
            m_Touch_PrimarySwipeDelta = m_Touch.FindAction("PrimarySwipeDelta", throwIfNotFound: true);
            m_Touch_SecondaryTouchContact = m_Touch.FindAction("SecondaryTouchContact", throwIfNotFound: true);
            m_Touch_SecondaryTouchPosition = m_Touch.FindAction("SecondaryTouchPosition", throwIfNotFound: true);
            m_Touch_PrimarySwipeDeltaPointer = m_Touch.FindAction("PrimarySwipeDeltaPointer", throwIfNotFound: true);
            // MouseKeyboard
            m_MouseKeyboard = asset.FindActionMap("MouseKeyboard", throwIfNotFound: true);
            m_MouseKeyboard_Scroll = m_MouseKeyboard.FindAction("Scroll", throwIfNotFound: true);
            m_MouseKeyboard_Move = m_MouseKeyboard.FindAction("Move", throwIfNotFound: true);
            m_MouseKeyboard_PointerPosition = m_MouseKeyboard.FindAction("PointerPosition", throwIfNotFound: true);
            m_MouseKeyboard_SwipeDelta = m_MouseKeyboard.FindAction("SwipeDelta", throwIfNotFound: true);
            m_MouseKeyboard_ClickContact = m_MouseKeyboard.FindAction("ClickContact", throwIfNotFound: true);
            m_MouseKeyboard_Rotate = m_MouseKeyboard.FindAction("Rotate", throwIfNotFound: true);
            m_MouseKeyboard_Interact = m_MouseKeyboard.FindAction("Interact", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Touch
        private readonly InputActionMap m_Touch;
        private List<ITouchActions> m_TouchActionsCallbackInterfaces = new List<ITouchActions>();
        private readonly InputAction m_Touch_PrimaryTouchPosition;
        private readonly InputAction m_Touch_PrimaryTouchContact;
        private readonly InputAction m_Touch_PrimarySwipeDelta;
        private readonly InputAction m_Touch_SecondaryTouchContact;
        private readonly InputAction m_Touch_SecondaryTouchPosition;
        private readonly InputAction m_Touch_PrimarySwipeDeltaPointer;
        public struct TouchActions
        {
            private @PlayerInputControls m_Wrapper;
            public TouchActions(@PlayerInputControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @PrimaryTouchPosition => m_Wrapper.m_Touch_PrimaryTouchPosition;
            public InputAction @PrimaryTouchContact => m_Wrapper.m_Touch_PrimaryTouchContact;
            public InputAction @PrimarySwipeDelta => m_Wrapper.m_Touch_PrimarySwipeDelta;
            public InputAction @SecondaryTouchContact => m_Wrapper.m_Touch_SecondaryTouchContact;
            public InputAction @SecondaryTouchPosition => m_Wrapper.m_Touch_SecondaryTouchPosition;
            public InputAction @PrimarySwipeDeltaPointer => m_Wrapper.m_Touch_PrimarySwipeDeltaPointer;
            public InputActionMap Get() { return m_Wrapper.m_Touch; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(TouchActions set) { return set.Get(); }
            public void AddCallbacks(ITouchActions instance)
            {
                if (instance == null || m_Wrapper.m_TouchActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_TouchActionsCallbackInterfaces.Add(instance);
                @PrimaryTouchPosition.started += instance.OnPrimaryTouchPosition;
                @PrimaryTouchPosition.performed += instance.OnPrimaryTouchPosition;
                @PrimaryTouchPosition.canceled += instance.OnPrimaryTouchPosition;
                @PrimaryTouchContact.started += instance.OnPrimaryTouchContact;
                @PrimaryTouchContact.performed += instance.OnPrimaryTouchContact;
                @PrimaryTouchContact.canceled += instance.OnPrimaryTouchContact;
                @PrimarySwipeDelta.started += instance.OnPrimarySwipeDelta;
                @PrimarySwipeDelta.performed += instance.OnPrimarySwipeDelta;
                @PrimarySwipeDelta.canceled += instance.OnPrimarySwipeDelta;
                @SecondaryTouchContact.started += instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.performed += instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.canceled += instance.OnSecondaryTouchContact;
                @SecondaryTouchPosition.started += instance.OnSecondaryTouchPosition;
                @SecondaryTouchPosition.performed += instance.OnSecondaryTouchPosition;
                @SecondaryTouchPosition.canceled += instance.OnSecondaryTouchPosition;
                @PrimarySwipeDeltaPointer.started += instance.OnPrimarySwipeDeltaPointer;
                @PrimarySwipeDeltaPointer.performed += instance.OnPrimarySwipeDeltaPointer;
                @PrimarySwipeDeltaPointer.canceled += instance.OnPrimarySwipeDeltaPointer;
            }

            private void UnregisterCallbacks(ITouchActions instance)
            {
                @PrimaryTouchPosition.started -= instance.OnPrimaryTouchPosition;
                @PrimaryTouchPosition.performed -= instance.OnPrimaryTouchPosition;
                @PrimaryTouchPosition.canceled -= instance.OnPrimaryTouchPosition;
                @PrimaryTouchContact.started -= instance.OnPrimaryTouchContact;
                @PrimaryTouchContact.performed -= instance.OnPrimaryTouchContact;
                @PrimaryTouchContact.canceled -= instance.OnPrimaryTouchContact;
                @PrimarySwipeDelta.started -= instance.OnPrimarySwipeDelta;
                @PrimarySwipeDelta.performed -= instance.OnPrimarySwipeDelta;
                @PrimarySwipeDelta.canceled -= instance.OnPrimarySwipeDelta;
                @SecondaryTouchContact.started -= instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.performed -= instance.OnSecondaryTouchContact;
                @SecondaryTouchContact.canceled -= instance.OnSecondaryTouchContact;
                @SecondaryTouchPosition.started -= instance.OnSecondaryTouchPosition;
                @SecondaryTouchPosition.performed -= instance.OnSecondaryTouchPosition;
                @SecondaryTouchPosition.canceled -= instance.OnSecondaryTouchPosition;
                @PrimarySwipeDeltaPointer.started -= instance.OnPrimarySwipeDeltaPointer;
                @PrimarySwipeDeltaPointer.performed -= instance.OnPrimarySwipeDeltaPointer;
                @PrimarySwipeDeltaPointer.canceled -= instance.OnPrimarySwipeDeltaPointer;
            }

            public void RemoveCallbacks(ITouchActions instance)
            {
                if (m_Wrapper.m_TouchActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ITouchActions instance)
            {
                foreach (var item in m_Wrapper.m_TouchActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_TouchActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public TouchActions @Touch => new TouchActions(this);

        // MouseKeyboard
        private readonly InputActionMap m_MouseKeyboard;
        private List<IMouseKeyboardActions> m_MouseKeyboardActionsCallbackInterfaces = new List<IMouseKeyboardActions>();
        private readonly InputAction m_MouseKeyboard_Scroll;
        private readonly InputAction m_MouseKeyboard_Move;
        private readonly InputAction m_MouseKeyboard_PointerPosition;
        private readonly InputAction m_MouseKeyboard_SwipeDelta;
        private readonly InputAction m_MouseKeyboard_ClickContact;
        private readonly InputAction m_MouseKeyboard_Rotate;
        private readonly InputAction m_MouseKeyboard_Interact;
        public struct MouseKeyboardActions
        {
            private @PlayerInputControls m_Wrapper;
            public MouseKeyboardActions(@PlayerInputControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @Scroll => m_Wrapper.m_MouseKeyboard_Scroll;
            public InputAction @Move => m_Wrapper.m_MouseKeyboard_Move;
            public InputAction @PointerPosition => m_Wrapper.m_MouseKeyboard_PointerPosition;
            public InputAction @SwipeDelta => m_Wrapper.m_MouseKeyboard_SwipeDelta;
            public InputAction @ClickContact => m_Wrapper.m_MouseKeyboard_ClickContact;
            public InputAction @Rotate => m_Wrapper.m_MouseKeyboard_Rotate;
            public InputAction @Interact => m_Wrapper.m_MouseKeyboard_Interact;
            public InputActionMap Get() { return m_Wrapper.m_MouseKeyboard; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MouseKeyboardActions set) { return set.Get(); }
            public void AddCallbacks(IMouseKeyboardActions instance)
            {
                if (instance == null || m_Wrapper.m_MouseKeyboardActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MouseKeyboardActionsCallbackInterfaces.Add(instance);
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @PointerPosition.started += instance.OnPointerPosition;
                @PointerPosition.performed += instance.OnPointerPosition;
                @PointerPosition.canceled += instance.OnPointerPosition;
                @SwipeDelta.started += instance.OnSwipeDelta;
                @SwipeDelta.performed += instance.OnSwipeDelta;
                @SwipeDelta.canceled += instance.OnSwipeDelta;
                @ClickContact.started += instance.OnClickContact;
                @ClickContact.performed += instance.OnClickContact;
                @ClickContact.canceled += instance.OnClickContact;
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
            }

            private void UnregisterCallbacks(IMouseKeyboardActions instance)
            {
                @Scroll.started -= instance.OnScroll;
                @Scroll.performed -= instance.OnScroll;
                @Scroll.canceled -= instance.OnScroll;
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @PointerPosition.started -= instance.OnPointerPosition;
                @PointerPosition.performed -= instance.OnPointerPosition;
                @PointerPosition.canceled -= instance.OnPointerPosition;
                @SwipeDelta.started -= instance.OnSwipeDelta;
                @SwipeDelta.performed -= instance.OnSwipeDelta;
                @SwipeDelta.canceled -= instance.OnSwipeDelta;
                @ClickContact.started -= instance.OnClickContact;
                @ClickContact.performed -= instance.OnClickContact;
                @ClickContact.canceled -= instance.OnClickContact;
                @Rotate.started -= instance.OnRotate;
                @Rotate.performed -= instance.OnRotate;
                @Rotate.canceled -= instance.OnRotate;
                @Interact.started -= instance.OnInteract;
                @Interact.performed -= instance.OnInteract;
                @Interact.canceled -= instance.OnInteract;
            }

            public void RemoveCallbacks(IMouseKeyboardActions instance)
            {
                if (m_Wrapper.m_MouseKeyboardActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMouseKeyboardActions instance)
            {
                foreach (var item in m_Wrapper.m_MouseKeyboardActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MouseKeyboardActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MouseKeyboardActions @MouseKeyboard => new MouseKeyboardActions(this);
        public interface ITouchActions
        {
            void OnPrimaryTouchPosition(InputAction.CallbackContext context);
            void OnPrimaryTouchContact(InputAction.CallbackContext context);
            void OnPrimarySwipeDelta(InputAction.CallbackContext context);
            void OnSecondaryTouchContact(InputAction.CallbackContext context);
            void OnSecondaryTouchPosition(InputAction.CallbackContext context);
            void OnPrimarySwipeDeltaPointer(InputAction.CallbackContext context);
        }
        public interface IMouseKeyboardActions
        {
            void OnScroll(InputAction.CallbackContext context);
            void OnMove(InputAction.CallbackContext context);
            void OnPointerPosition(InputAction.CallbackContext context);
            void OnSwipeDelta(InputAction.CallbackContext context);
            void OnClickContact(InputAction.CallbackContext context);
            void OnRotate(InputAction.CallbackContext context);
            void OnInteract(InputAction.CallbackContext context);
        }
    }
}
